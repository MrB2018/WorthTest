/*
 * API
 *
 * Worth App Api
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>server status</remarks>
        /// <response code="200">server status</response>
        /// <response code="400">Invalid request</response>
        [HttpGet]
        [Route("/Worth-School/api/v1/api")]
        [ValidateModelState]
        [SwaggerOperation("ApiGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<>), description: "server status")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Invalid request")]
        public virtual IActionResult ApiGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));

            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<>>(exampleJson)
            : default(List<>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>User information</remarks>
        /// <response code="200">User information</response>
        /// <response code="400">Invalid request</response>
        [HttpGet]
        [Route("/Worth-School/api/v1/user")]
        [ValidateModelState]
        [SwaggerOperation("UserGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<>), description: "User information")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Invalid request")]
        public virtual IActionResult UserGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));

            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<>>(exampleJson)
            : default(List<>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
